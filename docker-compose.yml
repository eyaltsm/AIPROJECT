version: '3.8'

services:
  # Backend API
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - ENV=dev
      - DEBUG=true
      - DATABASE_URL=postgresql://postgres:password@db:5432/ai_generation
      - REDIS_URL=redis://redis:6379
      - ACCESS_TOKEN_SECRET=dev-access-token-secret-change-in-production
      - REFRESH_TOKEN_SECRET=dev-refresh-token-secret-change-in-production
      - WORKER_TOKEN_SECRET=dev-worker-token-secret-change-in-production
      - S3_ENDPOINT_URL=http://minio:9000
      - S3_BUCKET=ai-generation-dev
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin123
      - STRIPE_SECRET_KEY=sk_test_your-test-key
      - STRIPE_WEBHOOK_SECRET=whsec_your-webhook-secret
      - STRIPE_PUBLISHABLE_KEY=pk_test_your-publishable-key
      - VAST_AI_API_KEY=your-vast-ai-key
      - RUNPOD_API_KEY=your-runpod-key
      - OPENAI_API_KEY=sk-your-openai-key
      - ANTHROPIC_API_KEY=sk-ant-your-anthropic-key
      - GROQ_API_KEY=gsk_your-groq-key
      - TOGETHER_API_KEY=your-together-key
    depends_on:
      - db
      - redis
    volumes:
      - ./backend:/app
    command: uvicorn working_main:app --host 0.0.0.0 --port 8000 --reload

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=ai_generation
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # MinIO for local S3-compatible storage (optional)
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

volumes:
  postgres_data:
  redis_data:
  minio_data:
