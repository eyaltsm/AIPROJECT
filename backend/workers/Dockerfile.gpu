# GPU Worker Dockerfile for AI Generation Platform
FROM nvidia/cuda:12.1-devel-ubuntu22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV CUDA_VISIBLE_DEVICES=0

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-venv \
    git \
    wget \
    curl \
    build-essential \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    && rm -rf /var/lib/apt/lists/*

# Create working directory
WORKDIR /opt/ai-worker

# Copy requirements first for better caching
COPY requirements-gpu.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements-gpu.txt

# Copy worker scripts
COPY worker.py .
COPY model_downloader.py .
COPY setup_worker.sh .

# Make scripts executable
RUN chmod +x worker.py model_downloader.py setup_worker.sh

# Create models directory
RUN mkdir -p /opt/ai-worker/models

# Set up ComfyUI
RUN git clone https://github.com/comfyanonymous/ComfyUI.git /opt/ComfyUI
WORKDIR /opt/ComfyUI
RUN pip install -r requirements.txt

# Install ComfyUI Manager
RUN git clone https://github.com/ltdrdata/ComfyUI-Manager.git custom_nodes/ComfyUI-Manager
WORKDIR /opt/ComfyUI/custom_nodes/ComfyUI-Manager
RUN pip install -r requirements.txt

# Set up AnimateDiff
WORKDIR /opt
RUN git clone https://github.com/guoyww/AnimateDiff.git
WORKDIR /opt/AnimateDiff
RUN pip install -r requirements.txt

# Return to worker directory
WORKDIR /opt/ai-worker

# Download initial models (optional - can be done at runtime)
# RUN python model_downloader.py --all --no-llm

# Expose port for ComfyUI
EXPOSE 8188

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8188/system_stats || exit 1

# Default command
CMD ["python", "worker.py", "--api-url", "${API_BASE_URL}", "--token", "${WORKER_TOKEN}"]


